{"ast":null,"code":"import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { pokemonApi } from './services/pokemon';\nconst rootReducer = combineReducers({\n  [pokemonApi.reducerPath]: pokemonApi.reducer\n});\nexport const setupStore = preloadedState => {\n  return configureStore({\n    reducer: rootReducer,\n    middleware: getDefaultMiddleware =>\n    // adding the api middleware enables caching, invalidation, polling and other features of `rtk-query`\n    getDefaultMiddleware().concat(pokemonApi.middleware),\n    preloadedState\n  });\n};","map":{"version":3,"names":["combineReducers","configureStore","pokemonApi","rootReducer","reducerPath","reducer","setupStore","preloadedState","middleware","getDefaultMiddleware","concat"],"sources":["C:/Users/nihad/OneDrive/Masaüstü/react-redux-3212-master/src/store.js"],"sourcesContent":["\nimport { combineReducers, configureStore } from '@reduxjs/toolkit'\nimport type { PreloadedState } from '@reduxjs/toolkit'\nimport { pokemonApi } from './services/pokemon'\n\nconst rootReducer = combineReducers({\n  [pokemonApi.reducerPath]: pokemonApi.reducer,\n})\n\nexport const setupStore = (preloadedState?: PreloadedState<RootState>) => {\n  return configureStore({\n    reducer: rootReducer,\n    middleware: (getDefaultMiddleware) =>\n      // adding the api middleware enables caching, invalidation, polling and other features of `rtk-query`\n      getDefaultMiddleware().concat(pokemonApi.middleware),\n    preloadedState,\n  })\n}\n\nexport type RootState = ReturnType<typeof rootReducer>\nexport type AppStore = ReturnType<typeof setupStore>\nexport type AppDispatch = AppStore['dispatch']\n"],"mappings":"AACA,SAASA,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAElE,SAASC,UAAU,QAAQ,oBAAoB;AAE/C,MAAMC,WAAW,GAAGH,eAAe,CAAC;EAClC,CAACE,UAAU,CAACE,WAAW,GAAGF,UAAU,CAACG;AACvC,CAAC,CAAC;AAEF,OAAO,MAAMC,UAAU,GAAIC,cAA0C,IAAK;EACxE,OAAON,cAAc,CAAC;IACpBI,OAAO,EAAEF,WAAW;IACpBK,UAAU,EAAGC,oBAAoB;IAC/B;IACAA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAACR,UAAU,CAACM,UAAU,CAAC;IACtDD;EACF,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}